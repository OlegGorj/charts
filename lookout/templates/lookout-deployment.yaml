{{- $secretName := default (include "lookout.fullname" .) .Values.app.lookout.secretName -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "lookout.fullname" . }}
  labels:
    app: {{ template "lookout.name" . }}
    chart: {{ template "lookout.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount.lookout }}
  selector:
    matchLabels:
      app: {{ template "lookout.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/lookout-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "lookout.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: lookout-configuration-volume
          configMap:
            name: {{ template "lookout.fullname" . }}-lookout-configuration
            items:
              - key: config.yaml
                path: config.yaml
      containers:
        - name: lookout
          image: "{{ .Values.image.lookout.repository }}:{{ required "Missing image.lookout.tag" .Values.image.lookout.tag }}"
          imagePullPolicy: {{ .Values.image.lookout.pullPolicy }}
          args:
            - serve
          env:
            - name: LOOKOUT_DATA_SERVER
              value: "ipv4://0.0.0.0:{{ .Values.app.lookout.port }}"
            - name: GITHUB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: githubUser
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: githubToken
            - name: LOOKOUT_BBLFSHD
              value: "{{ required "Missing app.lookout.bblfshdConnectionString " .Values.app.lookout.bblfshdConnectionString }}"
            - name: LOOKOUT_DB
              value: "{{ required "Missing app.lookout.dbConnectionString " .Values.app.lookout.dbConnectionString }}"
            - name: LOG_FORMAT
              value: "{{ .Values.app.lookout.logFormat }}"
            - name: LOOKOUT_CONFIG_FILE
              value: "/local/lookout/config.yaml"
            - name: LOG_LEVEL
              value: "{{ .Values.app.lookout.logLevel }}"
            {{- if .Values.app.lookout.logFields }}
            - name: LOG_FIELDS
              value: "{{ .Values.app.lookout.logFields }}"
            {{- end }}
            {{- if .Values.app.lookout.logForceFormat }}
            - name: LOG_FORCE_FORMAT
              value: "{{ .Values.app.lookout.logForceFormat }}"
            {{- end }}
            {{- if .Values.app.lookout.grpcMaxMsgSize }}
            - name: LOOKOUT_GRPC_MAX_MSG_SIZE
              value: "{{ .Values.app.lookout.grpcMaxMsgSize }}"
            {{- end }}
            - name: LOOKOUT_PROBES_ADDRESS
              value: "0.0.0.0:{{ .Values.app.lookout.probesPort }}"
          volumeMounts:
            - name: lookout-configuration-volume
              mountPath: /local/lookout
          ports:
            - containerPort: {{ .Values.app.lookout.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.app.lookout.probesPort }}
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: {{ .Values.app.lookout.probesPort }}
          resources:
{{ toYaml .Values.resources.lookout | indent 12 }}
    {{- with .Values.nodeSelector.lookout }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity.lookout }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations.lookout }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
